{"ast":null,"code":"import UserActionTypes from './user.types'; // FOR GOOGLE SIGN IN \n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); // FOR EMAIL AND PASSWORD \n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n}); // FOR BOTH GOOGLE & EMAIL/PSWRD \n\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n}); // FOR SESSION CHECK \n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n}); // FOR SIGN-OUT \n\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n}); // FOR SIGN-UP \n\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials\n});\nexport const signUpSuccess = ({\n  user,\n  additionalData\n}) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    user,\n    additionalData\n  }\n});\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["C:/Users/Trist/Desktop/crown-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","googleSignInStart","type","GOOGLE_SIGN_IN_START","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","payload","signInSuccess","user","SIGN_IN_SUCCESS","signInFailure","error","SIGN_IN_FAILURE","checkUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailure","SIGN_OUT_FAILURE","signUpStart","userCredentials","SIGN_UP_START","signUpSuccess","additionalData","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACtCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADgB,CAAP,CAA1B,C,CAIP;;AAEA,OAAO,MAAMC,gBAAgB,GAAGC,gBAAgB,KAAK;AACnDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,mBAD6B;AAEnDC,EAAAA,OAAO,EAAEF;AAF0C,CAAL,CAAzC,C,CAKP;;AAEA,OAAO,MAAMG,aAAa,GAAGC,IAAI,KAAK;AACpCP,EAAAA,IAAI,EAAEF,eAAe,CAACU,eADc;AAEpCH,EAAAA,OAAO,EAAEE;AAF2B,CAAL,CAA1B;AAKP,OAAO,MAAME,aAAa,GAAGC,KAAK,KAAK;AACrCV,EAAAA,IAAI,EAAEF,eAAe,CAACa,eADe;AAErCN,EAAAA,OAAO,EAAEK;AAF4B,CAAL,CAA3B,C,CAKP;;AAEA,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACrCZ,EAAAA,IAAI,EAAEF,eAAe,CAACe;AADe,CAAP,CAAzB,C,CAIP;;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAO;AACjCd,EAAAA,IAAI,EAAEF,eAAe,CAACiB;AADW,CAAP,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnChB,EAAAA,IAAI,EAAEF,eAAe,CAACmB;AADa,CAAP,CAAvB;AAIP,OAAO,MAAMC,cAAc,GAAIR,KAAD,KAAY;AACxCV,EAAAA,IAAI,EAAEF,eAAe,CAACqB,gBADkB;AAExCd,EAAAA,OAAO,EAAEK;AAF+B,CAAZ,CAAvB,C,CAKP;;AAEA,OAAO,MAAMU,WAAW,GAAIC,eAAD,KAAsB;AAC/CrB,EAAAA,IAAI,EAAEF,eAAe,CAACwB,aADyB;AAE/CjB,EAAAA,OAAO,EAAEgB;AAFsC,CAAtB,CAApB;AAKP,OAAO,MAAME,aAAa,GAAG,CAAC;AAAChB,EAAAA,IAAD;AAAOiB,EAAAA;AAAP,CAAD,MAA6B;AACxDxB,EAAAA,IAAI,EAAEF,eAAe,CAAC2B,eADkC;AAExDpB,EAAAA,OAAO,EAAE;AAACE,IAAAA,IAAD;AAAOiB,IAAAA;AAAP;AAF+C,CAA7B,CAAtB;AAKP,OAAO,MAAME,aAAa,GAAGhB,KAAK,KAAK;AACrCV,EAAAA,IAAI,EAAEF,eAAe,CAAC6B,eADe;AAErCtB,EAAAA,OAAO,EAAEK;AAF4B,CAAL,CAA3B","sourcesContent":["import UserActionTypes from './user.types';\r\n\r\n// FOR GOOGLE SIGN IN \r\n\r\nexport const googleSignInStart = () => ({\r\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\r\n});\r\n\r\n// FOR EMAIL AND PASSWORD \r\n\r\nexport const emailSignInStart = emailAndPassword => ({\r\n  type: UserActionTypes.EMAIL_SIGN_IN_START, \r\n  payload: emailAndPassword\r\n});\r\n\r\n// FOR BOTH GOOGLE & EMAIL/PSWRD \r\n\r\nexport const signInSuccess = user => ({\r\n  type: UserActionTypes.SIGN_IN_SUCCESS,\r\n  payload: user\r\n}); \r\n\r\nexport const signInFailure = error => ({\r\n  type: UserActionTypes.SIGN_IN_FAILURE,\r\n  payload: error\r\n});\r\n\r\n// FOR SESSION CHECK \r\n\r\nexport const checkUserSession = () => ({\r\n  type: UserActionTypes.CHECK_USER_SESSION\r\n});\r\n\r\n// FOR SIGN-OUT \r\n\r\nexport const signOutStart = () => ({\r\n  type: UserActionTypes.SIGN_OUT_START\r\n});\r\n\r\nexport const signOutSuccess = () => ({\r\n  type: UserActionTypes.SIGN_OUT_SUCCESS\r\n});\r\n\r\nexport const signOutFailure = (error) => ({\r\n  type: UserActionTypes.SIGN_OUT_FAILURE,\r\n  payload: error\r\n});\r\n\r\n// FOR SIGN-UP \r\n\r\nexport const signUpStart = (userCredentials) => ({\r\n  type: UserActionTypes.SIGN_UP_START,\r\n  payload: userCredentials\r\n});\r\n\r\nexport const signUpSuccess = ({user, additionalData}) => ({\r\n  type: UserActionTypes.SIGN_UP_SUCCESS, \r\n  payload: {user, additionalData}\r\n});\r\n\r\nexport const signUpFailure = error => ({\r\n  type: UserActionTypes.SIGN_UP_FAILURE, \r\n  payload: error\r\n});\r\n"]},"metadata":{},"sourceType":"module"}